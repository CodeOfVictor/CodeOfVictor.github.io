{"version":3,"sources":["components/Presentation.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","textInfo","textAlign","paddingTop","color","buttonInfo","marginLeft","width","linkButtons","justifyContent","Presentation","classes","openLink","src","name","window","open","focus","Grid","container","spacing","alignItems","item","xs","Avatar","style","marginTop","alt","sx","height","Typography","className","fontFamily","Button","variant","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAQMA,EAAYC,YAAW,CACzBC,SACA,CACIC,UAAU,SACVC,WAAY,EACZC,MAAO,SAEXC,WACA,CACIC,WAAY,kBACZC,MAAO,QAEXC,YACA,CACIC,eAAgB,YA+CTC,EA3CM,WAEjB,IAAMC,EAAUZ,IAEVa,EAAW,SAACC,EAAKC,GACTC,OAAOC,KAAKH,EAAKC,GACvBG,SAGR,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGX,eAAgB,SAAUY,WAAY,SAAlE,UACI,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACV,eAAgB,SAAUa,MAAI,EAACC,GAAI,GAAnD,SACI,cAACC,EAAA,EAAD,CACIC,MAAO,CAACC,UAAW,IACnBC,IAAI,WACJd,IAAI,cACJe,GAAI,CAAErB,MAAO,IAAKsB,OAAQ,SAGlC,eAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACI,cAACO,EAAA,EAAD,CAAYC,UAAWpB,EAAQV,SAAUwB,MAAO,CAAEO,WAAY,cAA9D,oCAGA,cAACF,EAAA,EAAD,CAAYC,UAAWpB,EAAQV,SAAUwB,MAAO,CAAEO,WAAY,cAA9D,wBAGA,cAACF,EAAA,EAAD,CAAYC,UAAWpB,EAAQV,SAAUwB,MAAO,CAAEO,WAAY,cAA9D,4BAGA,cAACF,EAAA,EAAD,CAAYC,UAAWpB,EAAQV,SAAUwB,MAAO,CAAEO,WAAY,cAA9D,wCAIJ,eAACd,EAAA,EAAD,CAAMC,WAAS,EAACV,eAAgB,SAAUa,MAAI,EAACC,GAAI,GAAnD,UACI,eAACU,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWpB,EAAQN,WAAY8B,QAAS,kBAAMvB,EAAS,qDAAsD,aAAxI,UAAqJ,cAAC,IAAD,IAArJ,cACA,eAACqB,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWpB,EAAQN,WAAY8B,QAAS,kBAAMvB,EAAS,kCAAmC,WAArH,UAAgI,cAAC,IAAD,IAAhI,YACA,eAACqB,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWpB,EAAQN,WAAY8B,QAAS,kBAAMvB,EAAS,kCAAmC,YAArH,UAAiI,cAAC,IAAD,IAAjI,aACA,eAACqB,EAAA,EAAD,CAAQC,QAAQ,WAAWH,UAAWpB,EAAQN,WAAY8B,QAAS,kBAAMvB,EAAS,iCAAkC,UAApH,UAA8H,cAAC,IAAD,IAA9H,iBCpDDwB,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e018602.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Avatar, Button, Grid, Typography } from '@mui/material';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    textInfo:\r\n    {\r\n        textAlign:\"center\",\r\n        paddingTop: 6,\r\n        color: \"white\"\r\n    },\r\n    buttonInfo:\r\n    {\r\n        marginLeft: '10px !important',\r\n        width: '7rem'\r\n    },\r\n    linkButtons:\r\n    {\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\nconst Presentation = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const openLink = (src, name) => {\r\n        var win = window.open(src, name);\r\n        win.focus();\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={4} justifyContent={'center'} alignItems={'center'}>\r\n            <Grid container justifyContent={'center'} item xs={12}>\r\n                <Avatar\r\n                    style={{marginTop: 32}}\r\n                    alt='Image cv'\r\n                    src='cvPhoto.jpg' // cvPhoto.jpg\r\n                    sx={{ width: 225, height: 225 }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography className={classes.textInfo} style={{ fontFamily: \"Montserrat\"}}>\r\n                    Víctor José B.M.\r\n                </Typography>\r\n                <Typography className={classes.textInfo} style={{ fontFamily: \"Montserrat\"}}>\r\n                    29/09/1998\r\n                </Typography>\r\n                <Typography className={classes.textInfo} style={{ fontFamily: \"Montserrat\"}}>\r\n                    Zaragoza 50018\r\n                </Typography>\r\n                <Typography className={classes.textInfo} style={{ fontFamily: \"Montserrat\"}}>\r\n                    correovictorb@gmail.com\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container justifyContent={'center'} item xs={12}>\r\n                <Button variant=\"outlined\" className={classes.buttonInfo} onClick={() => openLink('https://www.linkedin.com/in/v%C3%ADctor-jos%C3%A9/', 'linkedin')}><LinkedInIcon/>LinkedIn</Button>\r\n                <Button variant=\"outlined\" className={classes.buttonInfo} onClick={() => openLink('https://github.com/CodeOfVictor', 'github')}><GitHubIcon/>Github</Button>\r\n                <Button variant=\"outlined\" className={classes.buttonInfo} onClick={() => openLink('https://github.com/CodeOfVictor', 'twitter')}><TwitterIcon/>Twitter</Button>\r\n                <Button variant=\"outlined\" className={classes.buttonInfo} onClick={() => openLink('mailto:correovictorb@gmail.com', 'email')}><EmailIcon/>Mail</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Presentation;","import './App.css';\r\nimport Presentation from './components/Presentation';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Presentation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}